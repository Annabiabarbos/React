{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\52161105850\\\\Desktop\\\\React\\\\eventplus\\\\src\\\\pages\\\\EventosAlunoPage\\\\EventosAlunoPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport MainContent from \"../../components/MainContent/MainContent\";\nimport Title from \"../../components/Title/Title\";\nimport Table from \"./TableEvA/TableEvA\";\nimport Container from \"../../components/Container/Container\";\nimport { Select } from \"../../components/FormComponents/FormComponents\";\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport Modal from \"../../components/Modal/Modal\";\nimport api, { eventsResource, MyeventsResource } from \"../../Services/Service\";\nimport Toggle from \"../../components/Toggle/Toggle\";\nimport \"./EventosAlunoPage.css\";\nimport { UserContext } from \"../../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventosAlunoPage = () => {\n  _s();\n  // state do menu mobile\n  const [eventos, setEventos] = useState([]);\n\n  // select mocado\n  const [quaisEventos, setQuaisEventos] = useState([{\n    value: 1,\n    text: \"Todos os eventos\"\n  }, {\n    value: 2,\n    text: \"Meus eventos\"\n  }]);\n  const [tipoEvento, setTipoEvento] = useState(\"1\"); //código do tipo do Evento escolhido\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [showModal, setShowModal] = useState();\n\n  // recupera os dados globais do usuário\n  const {\n    userData\n  } = useContext(UserContext);\n  useEffect(() => {\n    async function loadEventsType() {\n      setShowSpinner(true);\n      //setEventos([]);\n      if (tipoEvento === \"1\") {\n        //chamar a api com todos os eventos\n        try {\n          //listar os eventos (Eventos)\n          const todosEventos = await api.get(eventsResource);\n          //setEventos(retornoEventos.data);\n          const meusEventos = await api.get(`${MyeventsResource}/${userData.userId}`);\n          const eventosMarcados = verificaPresenca(todosEventos.data, meusEventos);\n          setEventos = eventosMarcados;\n          console.clear(); //limpa o console\n\n          console.log(\"Todos os Eventos\");\n          console.log(todosEventos.data);\n          console.log(\"Eventos Marcados\");\n          console.log();\n          console.log(\"Eventos Marcados\");\n          console.log(eventosMarcados.data);\n        } catch (error) {\n          console.log(\"Erro na api\");\n          console.log(error);\n        }\n      } else if (tipoEvento === \"2\") {\n        //chamar a api dos meus eventos\n\n        try {\n          const retornoEventos = await api.get(`${MyeventsResource}/${userData.userId}`);\n          console.clear();\n          console.log(\"Minhas presenças\");\n          // console.log(retornoEventos.data);\n\n          const arrEventos = []; //array vazia\n\n          retornoEventos.data.forEach(e => {\n            arrEventos.push(e.evento);\n          });\n\n          //  console.log(arrEventos);\n          setEventos(arrEventos);\n        } catch (error) {\n          console.log(\"Erro na api\");\n          // console.log(error);\n        }\n      } else {\n        setEventos([]);\n      }\n      setShowSpinner(false);\n    }\n    loadEventsType();\n  }, [tipoEvento]);\n  const verificaPresenca = (arrAllEvents, eventsUser) => {\n    for (let x = 0; x < arrAllEvents.length; x++) {\n      //para cada evento principal \n      for (let i = 0; i < eventsUser.length; i++) {\n        //procurar a correspondência em minhas presenças\n        if (arrAllEvents[x].idEvento === eventsUser[i].idEvento) {\n          arrAllEvents[x].situacao = true; //para de procurar para o evento \n          break;\n        }\n      }\n    }\n    return arrAllEvents; //retorna os eventos marcados\n  };\n\n  // toggle meus eventos ou todos os eventos\n  function myEvents(tpEvent) {\n    setTipoEvento(tpEvent);\n  }\n  async function loadMyComentary(idComentary) {\n    return \"????\";\n  }\n  const showHideModal = () => {\n    setShowModal(showModal ? false : true);\n  };\n  const commentaryRemove = () => {\n    alert(\"Remover o comentário\");\n  };\n  function handleConnect() {\n    alert(\"Desenvolver a função conectar evento\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainContent, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          titleText: \"Eventos\",\n          className: \"custom-title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          id: \"id-tipo-evento\",\n          name: \"tipo-evento\",\n          required: true,\n          options: quaisEventos // aqui o array dos tipos\n          ,\n          manipulationFunction: e => myEvents(e.target.value) // aqui só a variável state\n          ,\n          defaultValue: tipoEvento,\n          additionalClass: \"select-tp-evento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          dados: eventos,\n          fnConnect: handleConnect,\n          fnShowModal: () => {\n            showHideModal(); //Inverte o valor de true pra false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), showSpinner ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 22\n    }, this) : null, showModal ? /*#__PURE__*/_jsxDEV(Modal, {\n      userId: userData.userId,\n      showHideModal: showHideModal,\n      fnDelete: commentaryRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n_s(EventosAlunoPage, \"7/IsveR/rZfyYGLaLyj5WY3DMMw=\");\n_c = EventosAlunoPage;\nexport default EventosAlunoPage;\nvar _c;\n$RefreshReg$(_c, \"EventosAlunoPage\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Header","MainContent","Title","Table","Container","Select","Spinner","Modal","api","eventsResource","MyeventsResource","Toggle","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","EventosAlunoPage","_s","eventos","setEventos","quaisEventos","setQuaisEventos","value","text","tipoEvento","setTipoEvento","showSpinner","setShowSpinner","showModal","setShowModal","userData","loadEventsType","todosEventos","get","meusEventos","userId","eventosMarcados","verificaPresenca","data","console","clear","log","error","retornoEventos","arrEventos","forEach","e","push","evento","arrAllEvents","eventsUser","x","length","i","idEvento","situacao","myEvents","tpEvent","loadMyComentary","idComentary","showHideModal","commentaryRemove","alert","handleConnect","children","titleText","className","fileName","_jsxFileName","lineNumber","columnNumber","id","name","required","options","manipulationFunction","target","defaultValue","additionalClass","dados","fnConnect","fnShowModal","fnDelete","_c","$RefreshReg$"],"sources":["C:/Users/52161105850/Desktop/React/eventplus/src/pages/EventosAlunoPage/EventosAlunoPage.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport MainContent from \"../../components/MainContent/MainContent\";\r\nimport Title from \"../../components/Title/Title\";\r\nimport Table from \"./TableEvA/TableEvA\";\r\nimport Container from \"../../components/Container/Container\";\r\nimport { Select } from \"../../components/FormComponents/FormComponents\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport Modal from \"../../components/Modal/Modal\";\r\nimport api, { eventsResource, MyeventsResource } from \"../../Services/Service\";\r\nimport Toggle from \"../../components/Toggle/Toggle\";\r\nimport \"./EventosAlunoPage.css\";\r\nimport { UserContext } from \"../../context/AuthContext\";\r\n\r\nconst EventosAlunoPage = () => {\r\n  // state do menu mobile\r\n  const [eventos, setEventos] = useState([]);\r\n\r\n  // select mocado\r\n  const [quaisEventos, setQuaisEventos] = useState([\r\n    { value: 1, text: \"Todos os eventos\" },\r\n    { value: 2, text: \"Meus eventos\" },\r\n  ]);\r\n\r\n  const [tipoEvento, setTipoEvento] = useState(\"1\"); //código do tipo do Evento escolhido\r\n  const [showSpinner, setShowSpinner] = useState(false);\r\n  const [showModal, setShowModal] = useState();\r\n\r\n  // recupera os dados globais do usuário\r\n  const { userData } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    async function loadEventsType() {\r\n      setShowSpinner(true);\r\n      //setEventos([]);\r\n      if (tipoEvento === \"1\") {\r\n        //chamar a api com todos os eventos\r\n        try {\r\n          //listar os eventos (Eventos)\r\n          const todosEventos = await api.get(eventsResource);\r\n          //setEventos(retornoEventos.data);\r\n          const meusEventos = await api.get(\r\n            `${MyeventsResource}/${userData.userId}`\r\n          );\r\n\r\n          const eventosMarcados = verificaPresenca (todosEventos.data, meusEventos)\r\n          setEventos = (eventosMarcados)\r\n\r\n          console.clear()  //limpa o console\r\n\r\n          console.log(\"Todos os Eventos\");\r\n          console.log(todosEventos.data);\r\n\r\n\r\n          console.log(\"Eventos Marcados\");\r\n          console.log();\r\n\r\n          console.log(\"Eventos Marcados\");\r\n          console.log(eventosMarcados.data);\r\n\r\n        } catch (error) {\r\n          console.log(\"Erro na api\");\r\n          console.log(error);\r\n        }\r\n      } else if (tipoEvento === \"2\") {\r\n        //chamar a api dos meus eventos\r\n\r\n        try {\r\n          const retornoEventos = await api.get(\r\n            `${MyeventsResource}/${userData.userId}`\r\n          );\r\n          console.clear()\r\n          console.log(\"Minhas presenças\");\r\n          // console.log(retornoEventos.data);\r\n\r\n          const arrEventos = []; //array vazia\r\n\r\n          retornoEventos.data.forEach((e) => {\r\n            arrEventos.push(e.evento);\r\n          });\r\n\r\n          //  console.log(arrEventos);\r\n          setEventos(arrEventos);\r\n        } catch (error) {\r\n          console.log(\"Erro na api\");\r\n          // console.log(error);\r\n        }\r\n      } else {\r\n        setEventos([]);\r\n      }\r\n\r\n      setShowSpinner(false);\r\n    }\r\n\r\n    loadEventsType();\r\n  }, [tipoEvento]);\r\n\r\n  const verificaPresenca = (arrAllEvents, eventsUser) => {\r\n    for (let  x = 0; x < arrAllEvents.length; x++) { //para cada evento principal \r\n      for (let i = 0; i < eventsUser.length; i ++) { //procurar a correspondência em minhas presenças\r\n        if (arrAllEvents [x]. idEvento === eventsUser [i].idEvento){\r\n          arrAllEvents[x]. situacao = true; //para de procurar para o evento \r\n          break; \r\n       }\r\n      }\r\n    }\r\n\r\n    return arrAllEvents; //retorna os eventos marcados\r\n  }\r\n\r\n  // toggle meus eventos ou todos os eventos\r\n  function myEvents(tpEvent) {\r\n    setTipoEvento(tpEvent);\r\n  }\r\n\r\n  async function loadMyComentary(idComentary) {\r\n    return \"????\";\r\n  }\r\n\r\n  const showHideModal = () => {\r\n    setShowModal(showModal ? false : true);\r\n  };\r\n\r\n  const commentaryRemove = () => {\r\n    alert(\"Remover o comentário\");\r\n  };\r\n\r\n  function handleConnect() {\r\n    alert(\"Desenvolver a função conectar evento\");\r\n  }\r\n  return (\r\n    <>\r\n      {/* <Header exibeNavbar={exibeNavbar} setExibeNavbar={setExibeNavbar} /> */}\r\n\r\n      <MainContent>\r\n        <Container>\r\n          <Title titleText={\"Eventos\"} className=\"custom-title\" />\r\n\r\n          <Select\r\n            id=\"id-tipo-evento\"\r\n            name=\"tipo-evento\"\r\n            required={true}\r\n            options={quaisEventos} // aqui o array dos tipos\r\n            manipulationFunction={(e) => myEvents(e.target.value)} // aqui só a variável state\r\n            defaultValue={tipoEvento}\r\n            additionalClass=\"select-tp-evento\"\r\n          />\r\n          <Table\r\n            dados={eventos}\r\n            fnConnect={handleConnect}\r\n            fnShowModal={() => {\r\n              showHideModal(); //Inverte o valor de true pra false\r\n            }}\r\n          />\r\n        </Container>\r\n      </MainContent>\r\n\r\n      {/* SPINNER -Feito com position */}\r\n      {showSpinner ? <Spinner /> : null}\r\n\r\n      {showModal ? (\r\n        <Modal\r\n          userId={userData.userId}\r\n          showHideModal={showHideModal}\r\n          fnDelete={commentaryRemove}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\nexport default EventosAlunoPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}