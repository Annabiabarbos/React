{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\52161105850\\\\Desktop\\\\React\\\\eventplus\\\\src\\\\pages\\\\EventosAlunoPage\\\\EventosAlunoPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport MainContent from \"../../components/MainContent/MainContent\";\nimport Title from \"../../components/Title/Title\";\nimport Table from \"./TableEvA/TableEvA\";\nimport Container from \"../../components/Container/Container\";\nimport { Select } from \"../../components/FormComponents/FormComponents\";\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport Modal from \"../../components/Modal/Modal\";\nimport api, { eventsResource, MyeventsResource } from \"../../Services/Service\";\nimport Toggle from \"../../components/Toggle/Toggle\";\nimport \"./EventosAlunoPage.css\";\nimport { UserContext } from \"../../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventosAlunoPage = () => {\n  _s();\n  // state do menu mobile\n  const [exibeNavbar, setExibeNavbar] = useState(false);\n  const [eventos, setEventos] = useState([]);\n\n  // select mocado\n  const [quaisEventos, setQuaisEventos] = useState([{\n    value: 1,\n    text: \"Todos os eventos\"\n  }, {\n    value: 2,\n    text: \"Meus eventos\"\n  }]);\n  const [tipoEvento, setTipoEvento] = useState(\"1\"); //código do tipo do Evento escolhido\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [showModal, setShowModal] = useState({\n    idEvento: \"1234\",\n    nomeEvento: \"Evento de JavaScript\",\n    dataEvento: \"\"\n  }, {\n    idEvento: \"1234\",\n    nomeEvento: \"Evento de JavaScript\",\n    dataEvento: \"\"\n  });\n\n  // recupera os dados globais do usuário\n  const {\n    userData,\n    setUserData\n  } = useContext(UserContext);\n  useEffect(() => {\n    async function loadEventsType() {\n      setShowSpinner(true);\n      //setEventos([]);\n      if (tipoEvento === \"1\") {\n        //chamar a api com todos os eventos\n        try {\n          //listar os eventos (Eventos)\n          const retornoEventos = await api.get(eventsResource);\n          setEventos(retornoEventos.data);\n          console.log(retornoEventos.data);\n        } catch (error) {\n          console.log(\"Erro na api\");\n          console.log(error);\n        }\n      } else {\n        //chamar a api dos meus eventos\n\n        try {\n          const retornoEventos = await api.get(`${MyeventsResource}/${userData.userId}`);\n          console.log(retornoEventos.data);\n        } catch (error) {\n          console.log(\"Erro na api\");\n          console.log(error);\n        }\n      }\n      setShowSpinner(false);\n    }\n    async function loadEventsType() {\n      setShowSpinner(true);\n      //setEventos([]);\n\n      if (tipoEvento === \"1\") {\n        //chamar a api com todos os eventos\n        try {\n          //listar os eventos (Eventos)\n          const retornoEventos = await api.get(eventsResource);\n          setEventos(retornoEventos.data);\n          console.log(retornoEventos.data);\n        } catch (error) {\n          console.log(\"Erro na api\");\n          console.log(error);\n        }\n      } else {\n        //chamar a api dos meus eventos\n\n        try {\n          const retornoEventos = await api.get(`${MyeventsResource}/${userData.userId}`);\n          const arrEventos = [];\n          retiorn;\n          console.log(retornoEventos.data);\n        } catch (error) {\n          console.log(\"Erro na api\");\n          console.log(error);\n        }\n      }\n      setShowSpinner(false);\n    }\n\n    // toggle meus eventos ou todos os eventos\n    function myEvents(tpEvent) {\n      setTipoEvento(tpEvent);\n    }\n    async function loadMyComentary(idComentary) {\n      return \"????\";\n    }\n    const showHideModal = () => {\n      setShowModal(showModal ? false : true);\n    };\n    const commentaryRemove = () => {\n      alert(\"Remover o comentário\");\n    };\n    function handleConnect() {\n      alert(\"Desenvolver a função conectar evento\");\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MainContent, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            titleText: \"Eventos\",\n            className: \"custom-title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            id: \"id-tipo-evento\",\n            name: \"tipo-evento\",\n            required: true,\n            options: quaisEventos // aqui o array dos tipos\n            ,\n            onChange: e => myEvents(e.target.value) // aqui só a variável state\n            ,\n            defaultValue: tipoEvento,\n            className: \"select-tp-evento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            dados: eventos,\n            fnConnect: handleConnect,\n            fnShowModal: () => {\n              showHideModal(); //Inverte o valor de true pra false\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), showSpinner ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 24\n      }, this) : null, showModal ? /*#__PURE__*/_jsxDEV(Modal, {\n        userId: userData.userId,\n        showHideModal: showHideModal,\n        fnDelete: commentaryRemove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true);\n  });\n};\n_s(EventosAlunoPage, \"nU5RrMnToCsiTdE0LPtYefsgmS0=\");\n_c = EventosAlunoPage;\nexport default EventosAlunoPage;\nvar _c;\n$RefreshReg$(_c, \"EventosAlunoPage\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Header","MainContent","Title","Table","Container","Select","Spinner","Modal","api","eventsResource","MyeventsResource","Toggle","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","EventosAlunoPage","_s","exibeNavbar","setExibeNavbar","eventos","setEventos","quaisEventos","setQuaisEventos","value","text","tipoEvento","setTipoEvento","showSpinner","setShowSpinner","showModal","setShowModal","idEvento","nomeEvento","dataEvento","userData","setUserData","loadEventsType","retornoEventos","get","data","console","log","error","userId","arrEventos","retiorn","myEvents","tpEvent","loadMyComentary","idComentary","showHideModal","commentaryRemove","alert","handleConnect","children","titleText","className","fileName","_jsxFileName","lineNumber","columnNumber","id","name","required","options","onChange","e","target","defaultValue","dados","fnConnect","fnShowModal","fnDelete","_c","$RefreshReg$"],"sources":["C:/Users/52161105850/Desktop/React/eventplus/src/pages/EventosAlunoPage/EventosAlunoPage.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport MainContent from \"../../components/MainContent/MainContent\";\r\nimport Title from \"../../components/Title/Title\";\r\nimport Table from \"./TableEvA/TableEvA\";\r\nimport Container from \"../../components/Container/Container\";\r\nimport { Select } from \"../../components/FormComponents/FormComponents\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport Modal from \"../../components/Modal/Modal\";\r\nimport api, { eventsResource, MyeventsResource } from \"../../Services/Service\";\r\nimport Toggle from \"../../components/Toggle/Toggle\";\r\nimport \"./EventosAlunoPage.css\";\r\nimport { UserContext } from \"../../context/AuthContext\";\r\n\r\nconst EventosAlunoPage = () => {\r\n  // state do menu mobile\r\n  const [exibeNavbar, setExibeNavbar] = useState(false);\r\n  const [eventos, setEventos] = useState([]);\r\n\r\n  // select mocado\r\n  const [quaisEventos, setQuaisEventos] = useState([\r\n    { value: 1, text: \"Todos os eventos\" },\r\n    { value: 2, text: \"Meus eventos\" },\r\n  ]);\r\n\r\n  const [tipoEvento, setTipoEvento] = useState(\"1\"); //código do tipo do Evento escolhido\r\n  const [showSpinner, setShowSpinner] = useState(false);\r\n  const [showModal, setShowModal] = useState(\r\n    { idEvento: \"1234\", nomeEvento: \"Evento de JavaScript\", dataEvento: \"\" },\r\n    { idEvento: \"1234\", nomeEvento: \"Evento de JavaScript\", dataEvento: \"\" }\r\n  );\r\n\r\n  // recupera os dados globais do usuário\r\n  const { userData, setUserData } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    async function loadEventsType() {\r\n      setShowSpinner(true);\r\n      //setEventos([]);\r\n      if (tipoEvento === \"1\") {\r\n        //chamar a api com todos os eventos\r\n        try {\r\n          //listar os eventos (Eventos)\r\n          const retornoEventos = await api.get(eventsResource);\r\n          setEventos(retornoEventos.data);\r\n          console.log(retornoEventos.data);\r\n        } catch (error) {\r\n          console.log(\"Erro na api\");\r\n          console.log(error);\r\n        }\r\n      } else {\r\n        //chamar a api dos meus eventos\r\n\r\n        try {\r\n          const retornoEventos = await api.get(\r\n            `${MyeventsResource}/${userData.userId}`\r\n          );\r\n          console.log(retornoEventos.data);\r\n        } catch (error) {\r\n          console.log(\"Erro na api\");\r\n          console.log(error);\r\n        }\r\n      }\r\n      setShowSpinner(false);\r\n    }\r\n\r\n    async function loadEventsType() {\r\n      setShowSpinner(true);\r\n      //setEventos([]);\r\n\r\n      if (tipoEvento === \"1\") {\r\n        //chamar a api com todos os eventos\r\n        try {\r\n          //listar os eventos (Eventos)\r\n          const retornoEventos = await api.get(eventsResource);\r\n          setEventos(retornoEventos.data);\r\n          console.log(retornoEventos.data);\r\n        } catch (error) {\r\n          console.log(\"Erro na api\");\r\n          console.log(error);\r\n        }\r\n      } else {\r\n        //chamar a api dos meus eventos\r\n\r\n        try {\r\n          const retornoEventos = await api.get(\r\n            `${MyeventsResource}/${userData.userId}`\r\n          );\r\n          const arrEventos = []\r\n          retiorn\r\n          console.log(retornoEventos.data);\r\n        } catch (error) {\r\n          console.log(\"Erro na api\");\r\n          console.log(error);\r\n        }\r\n      }\r\n      setShowSpinner(false);\r\n    }\r\n\r\n    // toggle meus eventos ou todos os eventos\r\n    function myEvents(tpEvent) {\r\n      setTipoEvento(tpEvent);\r\n    }\r\n\r\n    async function loadMyComentary(idComentary) {\r\n      return \"????\";\r\n    }\r\n\r\n    const showHideModal = () => {\r\n      setShowModal(showModal ? false : true);\r\n    };\r\n\r\n    const commentaryRemove = () => {\r\n      alert(\"Remover o comentário\");\r\n    };\r\n\r\n    function handleConnect() {\r\n      alert(\"Desenvolver a função conectar evento\");\r\n    }\r\n    return (\r\n      <>\r\n        {/* <Header exibeNavbar={exibeNavbar} setExibeNavbar={setExibeNavbar} /> */}\r\n\r\n        <MainContent>\r\n          <Container>\r\n            <Title titleText={\"Eventos\"} className=\"custom-title\" />\r\n\r\n            <Select\r\n              id=\"id-tipo-evento\"\r\n              name=\"tipo-evento\"\r\n              required={true}\r\n              options={quaisEventos} // aqui o array dos tipos\r\n              onChange={(e) => myEvents(e.target.value)} // aqui só a variável state\r\n              defaultValue={tipoEvento}\r\n              className=\"select-tp-evento\"\r\n            />\r\n            <Table\r\n              dados={eventos}\r\n              fnConnect={handleConnect}\r\n              fnShowModal={() => {\r\n                showHideModal(); //Inverte o valor de true pra false\r\n              }}\r\n            />\r\n          </Container>\r\n        </MainContent>\r\n\r\n        {/* SPINNER -Feito com position */}\r\n        {showSpinner ? <Spinner /> : null}\r\n\r\n        {showModal ? (\r\n          <Modal\r\n            userId={userData.userId}\r\n            showHideModal={showHideModal}\r\n            fnDelete={commentaryRemove}\r\n          />\r\n        ) : null}\r\n      </>\r\n    );\r\n  });\r\n}\r\nexport default EventosAlunoPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}